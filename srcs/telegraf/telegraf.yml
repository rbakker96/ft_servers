apiVersion: v1
kind: Service
metadata:
  name: telegraf
  labels:
    app: telegraf
spec:
  type: NodePort
  ports:
    - port: 8125
      nodePort: 8125
      protocol: UDP
  selector:
    app: telegraf

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: telegraf
  name: telegraf
spec:
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
        - name: telegraf
          image: telegraf:1.13-alpine
          env:
            - name: INFLUXDB_DB
              value: influxdb-database
            - name:  INFLUXDB_URL
              value: http://influxdb:8086
            - name: INFLUXDB_USER
              value: admin
            - name: INFLUXDB_USER_PASSWORD
              value: admin
          volumeMounts:
            - name: telegraf-config-volume
              mountPath: etc/telegraf/telegraf.conf
              subPath: telegraf.conf
            - name: docker-socket
              mountPath: /var/run/docker.sock
      volumes:
      - name: telegraf-config-volume
        configMap:
          name: telegraf-config
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  labels:
    app: telegraf
data:
  telegraf.conf: |+
      # # Global Agent Configuration
      # [global_tags]
      #   user = "$INFLUXDB_USER"

      # Read metrics about docker containers
      [[inputs.docker]]
        ## Docker Endpoint
        ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
        ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
        endpoint = "unix:///var/run/docker.sock"

        ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
        ## Note: configure this in one of the manager nodes in a Swarm cluster.
        ## configuring in multiple Swarm managers results in duplication of metrics.
        gather_services = false

        ## Only collect metrics for these containers. Values will be appended to
        ## container_name_include.
        ## Deprecated (1.4.0), use container_name_include
        container_names = []

        ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
        source_tag = false

        ## Containers to include and exclude. Collect all if empty. Globs accepted.
        container_name_include = []
        container_name_exclude = []

        ## Container states to include and exclude. Globs accepted.
        ## When empty only containers in the "running" state will be captured.
        ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
        ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
        # container_state_include = []
        # container_state_exclude = []

        ## Timeout for docker list, info, and stats commands
        timeout = "20s"

        ## Whether to report for each container per-device blkio (8:0, 8:1...) and
        ## network (eth0, eth1, ...) stats or not
        perdevice = true

        ## Whether to report for each container total blkio and network stats or not
        total = false

        ## docker labels to include and exclude as tags.  Globs accepted.
        ## Note that an empty array for both will include all labels as tags
        docker_label_include = []
        docker_label_exclude = []

        ## Which environment variables should we use as a tag
        tag_env = ["JAVA_HOME", "HEAP_SIZE"]

        ## Optional TLS Config
        # tls_ca = "/etc/telegraf/ca.pem"
        # tls_cert = "/etc/telegraf/cert.pem"
        # tls_key = "/etc/telegraf/key.pem"
        ## Use TLS but skip chain & host verification
        # insecure_skip_verify = false

      # Output Plugin InfluxDB
      [[outputs.influxdb]]
        urls = ["$INFLUXDB_URL"]
        skip_database_creation = false
        database = "$INFLUXDB_DB"
        username = "$INFLUXDB_USER"
        password = "$INFLUXDB_USER_PASSWORD"
